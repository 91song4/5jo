<body>
  <section class="client_section layout_padding">
    <div class="d-flex justify-content-center">
      <h2 class="custom_heading">이용 후기</h2>
    </div>
    <br />
    <div
      class="client_container"
      style="display: inherit; border: 1px black solid"
    >
      <div>
        <table class="table">
          <thead>
            <tr>
              <th scope="col">번호</th>
              <th scope="col">제목</th>
              <th scope="col">작성자</th>
              <th scope="col">생성일자</th>
            </tr>
          </thead>
          <tbody id="review-list">
            <% for(let i = 0 ; i < reviews.length; i++){ %>
            <tr>
              <td><%= ((reviewsMeta.page - 1) * 5 + 1 ) + i %></td>
              <td><%= reviews[i].title %></td>
              <td><%= reviews[i].userId %></td>
              <td><%= reviewsCreatedAt[i] %></td>
              <td>
                <button
                  class="btn btn-outline-dark"
                  onclick="location.replace('/view/review/' + '<%= reviews[i].id %>')"
                >
                  상세보기
                </button>
              </td>
            </tr>
            <% } %>
          </tbody>
        </table>
      </div>
      <div>
        <ul id="pagination">
          <li></li>
        </ul>
      </div>
    </div>
    <button
      style="margin: 5px"
      id="review-post-btn"
      type="button"
      class="btn btn-light"
    >
      리뷰 작성하러 가기
    </button>

    <div class="pagination"></div>
  </section>
</body>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    console.log('<%- reviewsMeta.page %>');
    // data
    const totalPage = parseInt('<%- reviewsMeta.lastPage %>', 10);
    const pageNationLi = document.querySelector('#pagination li');

    // btn
    const postBtn = document.querySelector('#review-post-btn');

    // 페이지네이션 숫자 붙이기
    for (let i = 1; i <= totalPage; ++i) {
      const a = document.createElement('a');
      a.href = `/view/community?page=${i}&limit=5`;
      a.textContent = i + ' ';
      pageNationLi.appendChild(a);
    }

    // 글작성 버튼 눌렀을때, 조건체크 해서 페이지 넘기기
    // 조건 1. 로그인을 한 유저여야 한다.
    // 조건 2. 현재 접속자 id가 Orders 테이블에 있어야 한다.
    // 조건 2-1. 해당 Orders의 isReview의 값이 false여야 한다.
    postBtn.addEventListener('click', async () => {
      const { data: userId } = await axios.get('/api/auth/me');
      const { data: orders } = await axios.get(`/api/orders/${userId}`);
      const canReviewOrders = orders.filter(
        (order) => order.isReview === false,
      );
      if (canReviewOrders.length < 1) {
        return alert('리뷰작성 가능한 주문이 없습니다.');
      }
      document.cookie = `canReviewOrders=${JSON.stringify(
        canReviewOrders,
      )}; path=/view/community-post`;
      window.location.href = '/view/community-post';
    });
  });
</script>
