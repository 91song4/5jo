<body class="sub_page">
  <!-- about section -->
  <section class="about_section layout_padding">
    <div class="about_container">
      <div class="d-flex justify-content-center">
        <h2 class="custom_heading">결제</h2>
      </div>
      <table class="table">
        <thead>
          <tr>
            <th scope="col">캠프명</th>
            <th scope="col">이용 날짜</th>
            <th scope="col">이용 인원</th>
            <th scope="col">총 금액</th>
            <th scope="col">쿠폰</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td id="campName"></td>
            <td id="selectedDay"></td>
            <td id="totalPeople"></td>
            <td id="price"></td>
            <td id="coupon"></td>
          </tr>
        </tbody>
      </table>
      <div>
        <div class="price-wrap">
          <div>총 결제 금액 :</div>
          <div id="total-price" class="total-price"></div>
        </div>
      </div>
      <hr class="hr-solid" />
      <div class="div-wrap">
        <div class="user-info">
          <div class="info-wrap">
            <div class="info-title">예약자명 :</div>
            <div id="name" class="info-content"><%=userInfo.name%></div>
          </div>
          <div class="info-wrap">
            <div class="info-title">생년월일 :</div>
            <div id="birthday" class="info-content"><%=userInfo.birthday%></div>
          </div>
          <div class="info-wrap">
            <div class="info-title">연락처 :</div>
            <div id="phone" class="info-content"><%=userInfo.phone%></div>
          </div>
          <div class="info-wrap">
            <div class="info-title">비상연락처 :</div>
            <div class="">
              <textarea
                id="emergencyContact"
                class="emergency-contact"
                maxlength="20"
                rows="1"
              ></textarea>
            </div>
          </div>
          <div class="info-wrap">
            <div class="info-title">이메일 :</div>
            <div id="email" class="info-content"><%=userInfo.email%></div>
          </div>
          <div class="info-wrap">
            <div class="info-title">요청사항 :</div>
            <div class="info-content">
              <textarea
                id="requirements"
                class="requirements"
                maxlength="60"
                rows="1"
              ></textarea>
            </div>
          </div>
        </div>
        <div class="updown"></div>
        <div class="payment-wrap">
          <div>
            <button class="coupon-btn" onclick="couponSearch()">
              쿠폰 선택하기
            </button>
          </div>
          <div class="rules-wrap">
            <button id="card-payment" class="payment-rules">카드 결제</button>
            <button id="deposit" class="payment-rules">무통장 입금</button>
          </div>
          <div>
            <button id="pay" class="payment">결제</button>
          </div>
        </div>
      </div>
    </div>
  </section>
</body>

<script>
  document.addEventListener('DOMContentLoaded', async function () {
    // 로컬 스토리지 긁어오고
    debugger;
    const { campName, selectedDay, totalPeople, totalPrice } = JSON.parse(
      localStorage.getItem('paymentInfo'),
    );
    getPaymentInfo();

    // 부족한 정보 API로 받아오고
    const response = await axios.get('/api/camps');
    const camp = response.data.find((camp) => camp.name === campName);
    const campId = camp ? camp.id : null;
    console.log('camp ID : ', campId);

    const cardPaymentBtn = document.getElementById('card-payment');
    const depositBtn = document.getElementById('deposit');
    const payBtn = document.getElementById('pay');

    let paymentMethod;

    // 쿠폰 완성되면 해야하는거
    // 쿠폰 버튼을 누르면 GET API 발동 후 쿠폰을 선택할 수 있게 해야함.
    // 선택한 쿠폰의 할인 퍼센트에 따라 totalPrice에 반영하고 변수에 할당함 ( discountTotalPrice )
    // 할당된 변수를 const discountTotalPriceFromCommas = discountTotalPrice.toLocaleString('ko-KR')를 이용해서 문자열 뒤에서 3개마다 , 찍어줌
    // document.querySelector('#total-price',).innerHTML = `${discountTotalPriceFromCommas} 원`;
    // 적용하고 결제 POST API에 discountTotalPriceFromCommas 할당

    // 카드결제 버튼 세팅
    cardPaymentBtn.addEventListener('click', function () {
      paymentMethod = 'card';
      cardPaymentBtn.classList.add('active');
      depositBtn.classList.remove('active');
    });

    // 무통장 버튼 세팅
    depositBtn.addEventListener('click', function () {
      paymentMethod = 'deposit';
      depositBtn.classList.add('active');
      cardPaymentBtn.classList.remove('active');
    });

    // 결제하기 버튼 세팅
    payBtn.addEventListener('click', function () {
      if (!paymentMethod) {
        alert('원하시는 결제 방식을 먼저 선택해주세요');
        return;
      }
      payment(paymentMethod);
    });

    // 결제정보를 HTML에 뿌려주는 함수
    function getPaymentInfo() {
      // 문자열 3개마다 쉼표 넣어주고 변수에 담음
      const totalPriceWithCommas = totalPrice.toLocaleString('ko-KR');
      document.querySelector('#campName').innerHTML = campName;
      document.querySelector('#selectedDay').innerHTML = selectedDay;
      document.querySelector('#totalPeople').innerHTML = `${totalPeople} 명`;
      document.querySelector('#price').innerHTML = `${totalPriceWithCommas} 원`;
      document.querySelector('#coupon').innerHTML = '사용하지 않음';
      document.querySelector(
        '#total-price',
      ).innerHTML = `${totalPriceWithCommas} 원`;
    }

    const userId = '<%=userInfo.id%>';

    function payment(paymentMethod) {
      paymentMethod = paymentMethod === 'card' ? 0 : 1;
      // 버튼을 누른 이후에 작성된 비상연락처, 요청사항을 가져옴
      const emergencyContact =
        document.getElementById('emergencyContact').value;
      const requirements = document.getElementById('requirements').value;

      // 휴대폰번호 검증 정규식 (https://hanryangitstory.tistory.com/12)
      const regPhone = /^01([0|1|6|7|8|9])-?([0-9]{3,4})-?([0-9]{4})$/;

      if (emergencyContact && regPhone.test(emergencyContact) == false) {
        throw new Error(
          (status = 400),
          alert('비상 연락처에는 휴대폰 번호만 입력 가능합니다'),
        );
      }

      try {
        axios
          .post('/api/orders', {
            userId,
            campId,
            selectedDay,
            headcount: totalPeople,
            receipt: totalPrice,
            isReview: false,
            type: paymentMethod,
            emergencyContact: emergencyContact,
            requirements: requirements,
          })
          .then((response) => {
            alert('예약 완료');
            window.location.href = '/';
          })
          .catch((error) => {
            alert('올바르지 못한 요청');
            window.location.href = '/';
          });
      } catch (error) {
        throw new Error();
      }
    }
  });
</script>
